#!/bin/env python

##################################################################################################
#  Name:        statsdefault                                                                     #
#  Author:      Randy Johnson                                                                    #
#  Description: Report default settings for dbms_stats package.                                  #
#                                                                                                #
# History:                                                                                       #
#                                                                                                #
# Date       Ver. Who              Change Description                                            #
# ---------- ---- ---------------- ------------------------------------------------------------- #
# 09/29/2017 1.00 Randy Johnson    Initial write.                                                #
##################################################################################################

# --------------------------------------
# ---- Import Python Modules -----------
# --------------------------------------
from optparse     import OptionParser
from os           import environ
from os.path      import basename
from sys          import argv
from sys          import exit
from sys          import version_info
from signal       import SIGPIPE
from signal       import SIG_DFL
from signal       import signal
from Oracle       import RunSqlplus
from Oracle       import SetOracleEnv
from Oracle       import ParseConnectString
from Oracle       import PrintError


# --------------------------------------
# ---- Main Program --------------------
# --------------------------------------
if (__name__ == '__main__'):
  Cmd            = basename(argv[0]).split('.')[0]
  CmdDesc        = 'Report Default Parms for DBMS_STATS'
  Version        = '1.00'
  VersionDate    = 'Wed Aug 2 12:16:45 CDT 2017'
  DevState       = 'Production'
  Banner         = CmdDesc + ': Release ' + Version + ' '  + DevState + '. Last updated: ' + VersionDate
  Sql            = ''
  SqlHeader      = '/***** ' + CmdDesc.upper() + ' *****/'
  ErrChk         = False
  InStr          = ''
  ConnStr        = ''
  InstList       = []

  # For handling termination in stdout pipe; ex: when you run: oerrdump | head
  signal(SIGPIPE, SIG_DFL)

  Usage  = '\n\n-------------------------------------------------------------------------------'
  Usage += '\nReport default parameters used by DBMS_STATS package.'
  ArgParser = OptionParser(Usage)

  ArgParser.add_option('--s', dest='Show',     action='store_true', default=False,           help="print SQL query.")
  ArgParser.add_option('--v', dest='ShowVer',  action='store_true', default=False,           help="print version info.")

  # Parse command line arguments
  Options, args = ArgParser.parse_args()

  Show      = Options.Show
  ShowVer   = Options.ShowVer

  if (ShowVer == True):
    print('\n%s' % Banner)
    exit()

  # Tables
  # ------------------
  Sql += "column sname            format a30                         heading 'Name'\n"
  Sql += "column sval             format a10                         heading 'Sval'\n"
  Sql += "column spare4           format a30                         heading 'Spare4'\n"
  Sql += "\n"
  Sql += " SELECT " + SqlHeader + "\n"
  Sql += "        sname\n"
  Sql += "      , sval1\n"
  Sql += "      , spare4\n"
  Sql += "   FROM sys.optstat_hist_control$;"

  Sql = Sql.strip()

  if(Show):
    print('-----------cut-----------cut-----------cut-----------cut-----------cut-----------')
    print(Sql)
    print('-----------cut-----------cut-----------cut-----------cut-----------cut-----------')
    exit()

  # Check/setup the Oracle environment
  if (not('ORACLE_SID' in list(environ.keys()))):
    print('ORACLE_SID is required.')
    exit(1)
  else:
    # Set the ORACLE_HOME just in case it isn't set already.
    if (not('ORACLE_HOME' in list(environ.keys()))):
      (OracleSid, OracleHome) = SetOracleEnv(environ['ORACLE_SID'])

  # Parse the connect string if any, prompt for username, password if needed.
  if (len(args) > 0 and Show == False):
    InStr = args[0]
    ConnStr = ParseConnectString(InStr)

  # Execute the report
  if (ConnStr != ''):
    (Stdout) = RunSqlplus(Sql, ErrChk, ConnStr)
  else:
    (Stdout) = RunSqlplus(Sql, ErrChk)

  # Print the Report
  if (Stdout != ''):
    print('\n%s' % Stdout)

  exit(0)
# --------------------------------------
# ---- End Main Program ----------------
# --------------------------------------

